@import '/reset';

// Conatiner Widths

$container-widths: (
  mobile: 360px,
  mobile--large: 480px,
  tablet: 720px,
  tablet--large: 960px,
  desktop: 1160px,
);

// Break Points

$grid-breakpoints: (
  reset: 0,
  mobile: 424px,
  mobile--large: 544px,
  tablet: 784px,
  tablet--large: 1024px,
  desktop: 1200px,
);

// Column Size

$columns: 12;
$column-gap: 2rem;

// Minimum Device Break Point

@function device-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if(0 != $min, $min, null);
}

// Maximum Device Break Point

@function device-max($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $next: if(
    index($breakpoint-names, $name) < length($breakpoint-names),
    nth(
      $breakpoint-names,
      index($breakpoint-names, $name) + 1
    ),
    null
  );
@return if($next, device-min($next, $breakpoints) - 0.02px, null);
}

// Device breakpoint up. If the breakpoint is the smallest it will return without media query.
@mixin device-up($name, $breakpoints: $grid-breakpoints) {
  $min: device-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  }
  @else {
    @content;
  }
}

// Device breakpoint down. If the breakpoint is the largest it will return without media query.
@mixin device-down($name, $breakpoints: $grid-breakpoints) {
  $max: device-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  }
  @else {
    @content;
  }
}

// Device breakpoint between
@mixin device-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: device-min($lower, $breakpoints);
  $max: device-max($upper, $breakpoints);
  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }
  @else if $max == null {
    @include device-up($lower, $breakpoints) {
      @content;
    }
  }
  @else if $min == null {
    @include device-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Device breakpoint only
@mixin device-only($name, $breakpoints: $grid-breakpoints) {
  $min: device-min($name, $breakpoints);
  $max: device-max($name, $breakpoints);
  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }
  @else if $max == null {
    @include device-up($name, $breakpoints) {
      @content;
    }
  }
  @else if $min == null {
    @include device-down($name, $breakpoints) {
      @content;
    }
  }
}

// Container
.container {
  width: 100%;
  padding-right: ($column-gap / 2);
  padding-left: ($column-gap / 2);
  margin-right: auto;
  margin-left: auto;
  @each $breakpoint, $width in $container-widths {
    @include device-up($breakpoint, $grid-breakpoints) {
      max-width: $width;
    }
  }
}

// Column wrap
.columns {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($column-gap / -2);
  margin-left: ($column-gap / -2);
}

